//created on: Apr 19, 2016
package eu.trentorise.game.model


/*
rule "green badge notification"
no-loop
when
	$bn : BadgeNotification($b: this.badge contains "green")
	$c : CustomData($counter : this['ch_foobarUUID_notification_counter'])
then
	log ("Badge Collection updated with: " + $b.toString());
	if ($counter == null) {
		$c.put("ch_foobarUUID_notification_counter", 1);
	} else {
		$c.put("ch_foobarUUID_notification_counter", (Integer) $counter + 1);
	}
	update($c);
end
*/


rule "green badge update"
when
	$bu : BadgeUpdate(this.collection == "green leaves", $b: this.badge)
	Player( $playerId : id)
	$c : CustomData($counter : this['ch_foobarUUID_update_counter'])
then
	log ("Badge Collection for Player " + $playerId + " updated with: " + $b.toString());
	if ($counter == null) {
		$c.put("ch_foobarUUID_update_counter", 1);
	} else {
		$c.put("ch_foobarUUID_update_counter", (Integer) $counter + 1);
	}
	retract ($bu);
	update($c);	
end

rule "bike aficionado update"
when
	$bu : BadgeUpdate(this.collection == "bike aficionado", $b: this.badge)
	Player( $playerId : id)
	$c : CustomData($counter : this['ch_foobarUUID_update_counter'])
then
	log ("Badge Collection for Player " + $playerId + " updated with: " + $b.toString());
	if ($counter == null) {
		$c.put("ch_foobarUUID_update_counter", 1);
	} else {
		$c.put("ch_foobarUUID_update_counter", (Integer) $counter + 1);
	}
	retract ($bu);
	update($c);	
end




