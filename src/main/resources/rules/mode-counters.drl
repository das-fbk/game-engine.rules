package eu.trentorise.game.model

global Double walk_min;
global Double walk_max;
global Double bike_max;

rule "update 0-impact counters"
lock-on-active
when
	InputData (($walk : data["walkDistance"] != null || $bike : data["bikeDistance"] != null) &&
		($bus : data["busDistance"] == null || ((Double)$bus)==0) && 
		($train : data["trainDistance"] == null || ((Double)$train)==0) &&
		($car : data["carDistance"]==null || ((Double)$car)==0))
		$zeroImpactTrips : PointConcept(name == "ZeroImpact_Trips")
then
	Boolean incremented= new Boolean(false);
	if($walk!=null){
	if((Double) $walk > walk_min){
		log("apply \'ZeroImpact_Trips update\'");
		$zeroImpactTrips.increment(1.0d);
		update($zeroImpactTrips);
		incremented=true;
		}
	}
	if(incremented==false && $bike!=null){
		log("apply \'ZeroImpact_Trips update\'");
		$zeroImpactTrips.increment(1.0d);
		update($zeroImpactTrips);
	}
end

rule "update walk counters"
lock-on-active
when
    InputData( $km : data["walkDistance"] != null, $km >= walk_min)
    $walkTrips : PointConcept(name == "Walk_Trips")
    $walkKm : PointConcept(name == "Walk_Km")
then
	log("apply \'Walk_Trips and Walk_Km update\'");
	$walkTrips.increment(1.0d);
	$walkKm.increment((Double) $km);
	update($walkTrips); 
	update($walkKm);
end


rule "update bike and bike sharing counters"
lock-on-active
when
    InputData( $km : data["bikeDistance"] != null, $bs : data["bikesharing"])
    $bikeTrips : PointConcept(name == "Bike_Trips")
    $bikeKm : PointConcept(name == "Bike_Km")
    $bsTrips : PointConcept(name == "BikeSharing_Trips")
    $bsKm : PointConcept(name == "BikeSharing_Km")
then
	if($bs !=null){
		if((boolean) $bs == true) {
			log("apply \'BikeSharing_Trips and BikeSharing_Km update\'");
			$bsTrips.increment(1.0d);
			$bsKm.increment((Double) $km);
			update($bsTrips); 
			update($bsKm);
		} 
	}
	log("apply \'Bike_Trips and Bike_Km update\'");
	$bikeTrips.increment(1.0d);
	$bikeKm.increment((Double) $km);
	update($bikeTrips); 
	update($bikeKm);
end


rule "update bus counters"
lock-on-active
when
    InputData( $km : data["busDistance"] != null)
    $busTrips : PointConcept(name == "Bus_Trips")
    $busKm : PointConcept(name == "Bus_Km")
then
	log("apply \'Bus_Trips and Bus_Km update\'");
	$busTrips.increment(1.0d);
	$busKm.increment((Double) $km);
	update($busTrips); 
	update($busKm);
end


rule "update train counters"
lock-on-active
when
    InputData( $km : data["trainDistance"] != null)
    $trainTrips : PointConcept(name == "Train_Trips")
    $trainKm : PointConcept(name == "Train_Km")
then
	log("apply \'Train_Trips and Train_Km update\'");
	$trainTrips.increment(1.0d);
	$trainKm.increment((Double) $km);
	update($trainTrips); 
	update($trainKm);
end

rule "update car counters"
lock-on-active
when
    InputData( $km : data["carDistance"] != null)
    $carTrips : PointConcept(name == "Car_Trips")
    $carKm : PointConcept(name == "Car_Km")
then
	log("apply \'Car_Trips and Car_Km update\'");
	$carTrips.increment(1.0d);
	$carKm.increment((Double) $km);
	update($carTrips); 
	update($carKm);
end

rule "update no-car counters"
lock-on-active
when
    InputData( $km : data["carDistance"] == null)
    $noCarTrips : PointConcept(name == "NoCar_Trips")
then
	log("apply \'NoCar_Trips update\'");
	$noCarTrips.increment(1.0d);
	update($noCarTrips); 
end

rule "update recommendation counters"
lock-on-active
when
	Action ($id : id == "app_sent_recommandation")
	$reccomend : PointConcept(name == "Recommendations")
then
	log("apply \'Recommendations update\'");
	$reccomend.increment(1.0d);
	update($reccomend); 
end

rule "update P&R counters"
lock-on-active
when
    InputData( $park : data['park'] != null)
    $PandR : PointConcept(name == "PandR_Trips")
then
	log("apply \'PandR_Trips update\'");
	$PandR.increment(1.0d);
	update($PandR);
end

//rule "update Cable counters"
//TODO if needed..