package eu.trentorise.game.model

global Double green_walk_points;
global Double green_bike_points;
global Double green_transit_points;
global Double recommendation_bonus;
global Double green_bus_points_base;
global Double green_bus_points_step0;
global Double green_bus_points_step1;
global Double green_bus_points_step2;
global Double green_bus_points_step3;
global Double zero_impact_booster;

global Double bus_threshold_step0;
global Double bus_threshold_step1;
global Double bus_threshold_step2;
global Double bus_threshold_step3;
global Double walk_min;
global Double walk_max;
global Double bike_max;


rule "cable transit update green points"
when
	InputData($transit : data["transitDistance"] !=null )
	$pc : PointConcept(name == "green leaves")
then
	log("apply \'public transit update green points\'");
	$pc.setScore($pc.getScore() + green_transit_points);
end

rule "public transport update green points"
when
	InputData($bus : data["busDistance"] !=null || $train : data["trainDistance"] != null )
	$pc : PointConcept(name == "green leaves")
then

	log("apply \'public transport update green points\'");	
	if ($bus == null) 
		$bus = 0d;
	if ($train == null)
		$train = 0d;
	Double ptDistance = (Double)$bus + (Double)$train;
	Double ptPoints;
	if (ptDistance >= bus_threshold_step0 && ptDistance < bus_threshold_step1)
		ptPoints = green_bus_points_step0;
	else if (ptDistance >= bus_threshold_step1 && ptDistance < bus_threshold_step2)
		ptPoints = green_bus_points_step1;
	else if (ptDistance >= bus_threshold_step2 && ptDistance < bus_threshold_step3)
		ptPoints = green_bus_points_step2;
	else if (ptDistance >= bus_threshold_step3)
		ptPoints = green_bus_points_step3;
	else
		ptPoints = green_bus_points_base;
		
	$pc.setScore($pc.getScore() + (Double) Math.rint(ptPoints));
	
	update($pc); 
end

rule "0-impact - sustainable - walk - bike - update green points"
when
	Action ($id : id == "save_itinerary")
	InputData($bike : data["bikeDistance"], $walk : data["walkDistance"], $bus : data["busDistance"], 
		$cable : data["transitDistance"], $train : data["trainDistance"], $car : data["carDistance"])
	$pc : PointConcept( name == "green leaves")
then
	log("apply \'0-impact - sustainable - walk - bike - update green points\'");
	boolean zeroImpact = ($walk != null || $bike != null) && (($bus == null || ((Double)$bus) == 0) 
		&&  ($car == null || ((Double)$car) == 0) && ($train == null || ((Double)$train) == 0) && ($cable == null || ((Double)$cable) == 0));
	
	Double score_zeroImpact = 0.0;
	
	Double walkDistance = $walk != null ? (Double) $walk : 0.0;
	walkDistance = walkDistance < walk_min ? 0.0 : walkDistance;
	walkDistance = walkDistance > walk_max ? walk_max : walkDistance;
	
	Double bikeDistance = $bike != null ? (Double) $bike : 0.0;
	bikeDistance = bikeDistance > bike_max ? bike_max : bikeDistance;
	
	Double score = (walkDistance * green_walk_points)  + (bikeDistance * green_bike_points);
	
	if (zeroImpact)
		score_zeroImpact = zero_impact_booster * score;	
 	
	$pc.setScore($pc.getScore() + (Double) Math.rint(score + score_zeroImpact));
	update($pc);

end


rule "recommendation bonus"
	salience 1
when
	Action ($id : id == "app_sent_recommandation")
    $pc : PointConcept(name == "green leaves")
then
	log("apply \'recommendation bonus\'");
	$pc.setScore($pc.getScore() + recommendation_bonus);
    update($pc); 
end
